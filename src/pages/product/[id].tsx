import { Product } from '@/components/Product/Product'
import { stripe } from '@/lib/stripe'
import axios from 'axios'
import { GetStaticPaths, GetStaticProps } from 'next'
import Head from 'next/head'
import { useRouter } from 'next/router'
import Stripe from 'stripe'

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    // Pegar as paginas mais acessados para renderizar na build
    paths: [
      { params: { id: 'prod_NiJoR1asx5uWqX' } }
    ],
    // Com falback true ele pega 
    fallback: true
  }
}


export const getStaticProps: GetStaticProps<any, {id: string}> = async ({params}) => {

  // @ts-ignore
  const productId = params.id

  const response = await stripe.products.retrieve(
    productId,
    {
      expand: ['default_price']
    }
  )

  const price = response.default_price as Stripe.Price

  return {
    props: { 
      product: {
        id: response.id,
        name: response.name,
        imageUrl: response.images[0],
        description: response.description,
        price: new Intl.NumberFormat('pt-BR', {
          style: 'currency',
          currency: 'BRL'
        }).format(price.unit_amount?  price.unit_amount / 100 : 0),
        defaultPriceId: price.id
      }
    },
    revalidate: 60 * 60 * 1 // 1 hours
  }
}

interface ProductProps {
  product: {
    id: string,
    name: string,
    imageUrl: string,
    description: string,
    price: string,
    defaultPriceId: string
  }
}

export default function ProductPage( {product}: ProductProps) {
  const {isFallback} = useRouter()

  if(isFallback){
    return (
      <h1>Carregando o produto...</h1>
    )
  }

  const handleClickBuy = async () => {
    try {
      const response = await axios.post('/api/checkout', {
        priceId: product.defaultPriceId
      })

      const { checkoutUrl } = response.data

      window.location.href = checkoutUrl

    } catch (err) {
      alert('Falha ao se comunicar com o servi√ßo de pagamento.')
    }
  }


  return (
    <>
      <Head>
        <title>{product.name} - Ignite Shop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      <main>
         <Product product={product} onClickBuy={handleClickBuy}/>
      </main>
    </>
  )
}